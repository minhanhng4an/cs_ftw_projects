[{"/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/App.js":"1","/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/components/SearchForm.js":"2","/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/components/IssueList.js":"3","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/App.js":"4","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/PublicNavbar.js":"5","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/IssueModal.js":"6","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/PaginationBar.js":"7","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/SearchForm.js":"8","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/IssueList.js":"9","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/index.js":"10"},{"size":3005,"mtime":1606467948537,"results":"11","hashOfConfig":"12"},{"size":805,"mtime":1606467948538,"results":"13","hashOfConfig":"12"},{"size":1005,"mtime":1606553888833,"results":"14","hashOfConfig":"12"},{"size":3605,"mtime":1606706312962,"results":"15","hashOfConfig":"16"},{"size":609,"mtime":1606467948538,"results":"17","hashOfConfig":"16"},{"size":4181,"mtime":1606705803808,"results":"18","hashOfConfig":"16"},{"size":1703,"mtime":1606660641182,"results":"19","hashOfConfig":"16"},{"size":805,"mtime":1606467948538,"results":"20","hashOfConfig":"16"},{"size":287,"mtime":1606631675512,"results":"21","hashOfConfig":"16"},{"size":146,"mtime":1606467948538,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11lr0fk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"delhlg",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/App.js",[],"/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/components/SearchForm.js",[],"/Users/coderschool/Documents/cs-ftw/cheetah_demo_code/week4/github-issues/src/components/IssueList.js",["44"],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/App.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/PublicNavbar.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/IssueModal.js",["45"],"import React, { useState } from \"react\";\nimport { Media, Modal, Button } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst Comment = ({ item }) => {\n  return (\n    <li className=\"d-flex ml-3 mr-3 mb-3 comment-item\">\n      <img\n        width={150}\n        height={150}\n        className=\"mr-3 col-2\"\n        src={item.user.avatar_url}\n        alt=\"Generic placeholder\"\n      />\n\n      <div className=\"col-10 comment-body\">\n        <div>\n          <span className=\"text-grey mr-2\">@{item.user.login}</span>\n          <span className=\"text-grey\">\n            commented <Moment fromNow>{item.created_at}</Moment>\n          </span>\n        </div>\n        <ReactMarkdown skipHtml>{item.body}</ReactMarkdown>\n      </div>\n    </li>\n  );\n};\n\nconst IssueModal = ({ item }) => {\n  const [show, setShow] = useState(false);\n  const [comment, setComment] = useState([]);\n  const [showMore, setShowMore] = useState(2);\n  const [isCommentLoading, setIsCommentLoading] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    const fetchComment = async (url) => {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.length > 0) {\n        setComment(data);\n      }\n    };\n\n    fetchComment(item.comments_url);\n    setShow(true);\n  };\n\n  return (\n    <>\n      <Media as=\"li\" className=\"mt-4\" onClick={handleShow}>\n        <img\n          width={150}\n          height={150}\n          className=\"mr-3\"\n          src={item.user.avatar_url}\n          alt=\"Generic placeholder\"\n        />\n        <Media.Body>\n          <h5>\n            <a className=\"no-under\" href=\"#\">\n              {`#${item.number}`}: {item.title}\n            </a>\n          </h5>\n          <div className=\"issue-description\">\n            <ReactMarkdown skipHtml>\n              {item.body.length <= 100 ? item.body : item.body.slice(0, 99)}\n            </ReactMarkdown>\n          </div>\n          <span>\n            Last update: <Moment fromNow>{item.updated_at}</Moment>\n          </span>\n        </Media.Body>\n      </Media>\n\n      <Modal size=\"xl\" className=\"p-10px\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {`#${item.number}`}: {item.title}\n            <Button\n              variant=\"primary\"\n              className=\"ml-5\"\n              size=\"md\"\n              active\n              onClick={() => window.open(item.html_url, \"_blank\")}\n            >\n              Open in Github\n            </Button>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"overflow-y: auto\">\n          <ReactMarkdown skipHtml>{item.body}</ReactMarkdown>\n        </Modal.Body>\n        <Modal.Title>\n          <hr></hr>\n          <div>\n            <h3 className=\"comment-header\">Comments:</h3>\n          </div>\n          <div>\n            <ul className=\"row m-0 flex-column list-unstyled listcmt\">\n              {comment.slice(0, showMore).map((item) => (\n                <Comment key={item.id} item={item} />\n              ))}\n              {item.comments === 0 && (\n                <li className=\"fix-text\">\n                  There are no comment on this issue.\n                </li>\n              )}\n              {item.comments > 5 && showMore < item.comments && (\n                <li className=\"ml-auto mr-auto mb-3\">\n                  {!isCommentLoading ? (\n                    <Button\n                      onClick={() => {\n                        setIsCommentLoading(true);\n                        setShowMore(showMore + 2);\n                        setIsCommentLoading(false);\n                      }}\n                    >\n                      Show more\n                    </Button>\n                  ) : (\n                    <ClipLoader\n                      color=\"#f86c6b\"\n                      size={75}\n                      loading={isCommentLoading}\n                    />\n                  )}\n                </li>\n              )}\n            </ul>\n          </div>\n        </Modal.Title>\n      </Modal>\n    </>\n  );\n};\n\nexport default IssueModal;\n","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/PaginationBar.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/SearchForm.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/components/IssueList.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_4/src/index.js",[],{"ruleId":"46","severity":1,"message":"47","line":17,"column":9,"nodeType":"48","messageId":"49","endLine":17,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":63,"column":13,"nodeType":"52","endLine":63,"endColumn":46},"no-unused-vars","'showDetail' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]